server.port=8882
server.servlet.context-path=/email
spring.application.name=email-service
email.on=true
env=test

#Java Mail Configurations
	spring.mail.from=${emailMS_MAIL_USERNAME}
	spring.mail.host=smtp.gmail.com
	spring.mail.port= ${emailMS_MAIL_PORT}
	spring.mail.username=${emailMS_MAIL_USERNAME}
	spring.mail.password=${emailMS_MAIL_PASSWORD}
	spring.mail.properties.mail.debug=false
	spring.mail.properties.mail.smtp.auth=true
	spring.mail.properties.mail.smtp.starttls.enable=true
	spring.mail.properties.mail.smtp.starttls.required=true
	
#DB Configurations
	spring.datasource.url=${emailMS_DB_URL}
	spring.datasource.username=${emailMS_DB_USERNAME}
	spring.datasource.password=${emailMS_DB_PASSWORD}
	spring.jpa.hibernate.ddl-auto=update
	spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
	spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#Show sql queries
	#logging.level.org.hibernate.SQL=debug
	#logging.level.org.hibernate.type.descriptor.sql= trace	

#Logger configuration
	logging.file.name = ../logs/email.log
	logging.level.com.spring.security=ERROR
	logging.level.org.springframework=ERROR
	
# To fix Load balancer does not have available server for client during microservice communication through feign client
eureka.instance.preferIpAddress= true
eureka.client.registerWithEureka= true
eureka.client.fetchRegistry= true
eureka.client.service-url.defaultZone = ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}

##44hrs
feign.client.config.default.connectTimeout= 160000000
feign.client.config.default.readTimeout= 160000000